/**
 * Kernel and initialization code for the stencil
 *
 * (u[0][0][0][1][0]=((alpha*u[0][0][0][0][0])+(beta*((u[1][0][0][0][0]+(u[-1][0][0][0][0]+u[0][1][0][0][0]))+(u[0][-1][0][0][0]+(u[0][0][1][0][0]+u[0][0][-1][0][0]))))))
 * 
 * Strategy: /home/christen/workspace/Patus-GoogleCode/strategy/cacheblocked.stg
 * 
 * This code was generated by Patus on 2011/08/10 17:29:42
 */

#include <stdint.h>



__device__ void laplacian___unroll_p3_20201(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx10;
	int _idx11;
	int _idx12;
	int _idx13;
	int _idx17;
	int _idx2;
	int _idx20;
	int _idx21;
	int _idx22;
	int _idx23;
	int _idx24;
	int _idx25;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int _idx7;
	int _idx8;
	int _idx9;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<(v2_idx_y_max-1); p3_idx_y+=2)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
									/* _idx23 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+2)) */
									_idx23=((_idx7+x_max)+2);
									/* _idx24 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+(p3_idx_x+1)) */
									_idx24=((_idx3+x_max)+3);
									/* _idx17 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx17=((_idx12+x_max)+4);
									/* _idx25 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx25=(_idx22+1);
									u_0_1[_idx8]=((alpha*u_0_0[_idx8])+(beta*((u_0_0[_idx23]+(u_0_0[_idx3]+u_0_0[_idx24]))+(u_0_0[_idx1]+(u_0_0[_idx17]+u_0_0[_idx25])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
								}
							}
							for (; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

__device__ void laplacian___unroll_p3_10202(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx10;
	int _idx11;
	int _idx12;
	int _idx13;
	int _idx14;
	int _idx15;
	int _idx17;
	int _idx2;
	int _idx20;
	int _idx21;
	int _idx22;
	int _idx26;
	int _idx27;
	int _idx28;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int _idx7;
	int _idx8;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<(v2_idx_z_max-1); p3_idx_z+=2)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<(v2_idx_y_max-1); p3_idx_y+=2)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
									/* _idx17 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx17=((_idx12+x_max)+4);
									/* _idx26 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx26=((_idx12+x_max)+2);
									/* _idx27 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+2)))+p3_idx_x) */
									_idx27=((_idx13+x_max)+2);
									/* _idx28 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+(p3_idx_y+1)))+p3_idx_x) */
									_idx28=((_idx15+x_max)+2);
									u_0_1[_idx13]=((alpha*u_0_0[_idx13])+(beta*((u_0_0[_idx17]+(u_0_0[_idx26]+u_0_0[_idx27]))+(u_0_0[_idx5]+(u_0_0[_idx28]+u_0_0[_idx3])))));
								}
							}
							for (; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
								}
							}
						}
						for (; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<(v2_idx_y_max-1); p3_idx_y+=2)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
								}
							}
							for (; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

__device__ void laplacian___unroll_p3_10102(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx10;
	int _idx12;
	int _idx13;
	int _idx14;
	int _idx15;
	int _idx2;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<(v2_idx_z_max-1); p3_idx_z+=2)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
								}
							}
						}
						for (; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

__device__ void laplacian___unroll_p3_10201(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx11;
	int _idx12;
	int _idx13;
	int _idx2;
	int _idx20;
	int _idx21;
	int _idx22;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int _idx7;
	int _idx8;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<(v2_idx_y_max-1); p3_idx_y+=2)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
								}
							}
							for (; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

__device__ void laplacian___unroll_p3_20101(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx10;
	int _idx11;
	int _idx2;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int _idx7;
	int _idx8;
	int _idx9;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

__device__ void laplacian___unroll_p3_10101(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx2;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

__device__ void laplacian___unroll_p3_20202(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx10;
	int _idx11;
	int _idx12;
	int _idx13;
	int _idx14;
	int _idx15;
	int _idx16;
	int _idx17;
	int _idx18;
	int _idx19;
	int _idx2;
	int _idx20;
	int _idx21;
	int _idx22;
	int _idx23;
	int _idx24;
	int _idx25;
	int _idx26;
	int _idx27;
	int _idx28;
	int _idx29;
	int _idx3;
	int _idx30;
	int _idx31;
	int _idx4;
	int _idx5;
	int _idx6;
	int _idx7;
	int _idx8;
	int _idx9;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<(v2_idx_z_max-1); p3_idx_z+=2)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<(v2_idx_y_max-1); p3_idx_y+=2)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
									/* _idx23 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+2)) */
									_idx23=((_idx7+x_max)+2);
									/* _idx24 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+(p3_idx_x+1)) */
									_idx24=((_idx3+x_max)+3);
									/* _idx17 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx17=((_idx12+x_max)+4);
									/* _idx25 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx25=(_idx22+1);
									u_0_1[_idx8]=((alpha*u_0_0[_idx8])+(beta*((u_0_0[_idx23]+(u_0_0[_idx3]+u_0_0[_idx24]))+(u_0_0[_idx1]+(u_0_0[_idx17]+u_0_0[_idx25])))));
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
									/* _idx16 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+2)) */
									_idx16=(_idx12+3);
									/* _idx18 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx18=(_idx12-x_max);
									/* _idx19 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+(p3_idx_x+1)) */
									_idx19=(_idx15+1);
									u_0_1[_idx10]=((alpha*u_0_0[_idx10])+(beta*((u_0_0[_idx16]+(u_0_0[_idx5]+u_0_0[_idx17]))+(u_0_0[_idx18]+(u_0_0[_idx19]+u_0_0[_idx1])))));
									/* _idx26 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx26=((_idx12+x_max)+2);
									/* _idx27 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+2)))+p3_idx_x) */
									_idx27=((_idx13+x_max)+2);
									/* _idx28 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+(p3_idx_y+1)))+p3_idx_x) */
									_idx28=((_idx15+x_max)+2);
									u_0_1[_idx13]=((alpha*u_0_0[_idx13])+(beta*((u_0_0[_idx17]+(u_0_0[_idx26]+u_0_0[_idx27]))+(u_0_0[_idx5]+(u_0_0[_idx28]+u_0_0[_idx3])))));
									/* _idx29 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+2)) */
									_idx29=((_idx12+x_max)+5);
									/* _idx30 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+2)))+(p3_idx_x+1)) */
									_idx30=((_idx29+x_max)+1);
									/* _idx31 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx31=((_idx15+x_max)+3);
									u_0_1[_idx17]=((alpha*u_0_0[_idx17])+(beta*((u_0_0[_idx29]+(u_0_0[_idx13]+u_0_0[_idx30]))+(u_0_0[_idx10]+(u_0_0[_idx31]+u_0_0[_idx8])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
									/* _idx17 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx17=((_idx12+x_max)+4);
									/* _idx26 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx26=((_idx12+x_max)+2);
									/* _idx27 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+2)))+p3_idx_x) */
									_idx27=((_idx13+x_max)+2);
									/* _idx28 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+(p3_idx_y+1)))+p3_idx_x) */
									_idx28=((_idx15+x_max)+2);
									u_0_1[_idx13]=((alpha*u_0_0[_idx13])+(beta*((u_0_0[_idx17]+(u_0_0[_idx26]+u_0_0[_idx27]))+(u_0_0[_idx5]+(u_0_0[_idx28]+u_0_0[_idx3])))));
								}
							}
							for (; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
									/* _idx16 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+2)) */
									_idx16=(_idx12+3);
									/* _idx17 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx17=((_idx12+x_max)+4);
									/* _idx18 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx18=(_idx12-x_max);
									/* _idx19 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+(p3_idx_x+1)) */
									_idx19=(_idx15+1);
									u_0_1[_idx10]=((alpha*u_0_0[_idx10])+(beta*((u_0_0[_idx16]+(u_0_0[_idx5]+u_0_0[_idx17]))+(u_0_0[_idx18]+(u_0_0[_idx19]+u_0_0[_idx1])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
								}
							}
						}
						for (; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<(v2_idx_y_max-1); p3_idx_y+=2)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
									/* _idx23 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+2)) */
									_idx23=((_idx7+x_max)+2);
									/* _idx24 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+(p3_idx_x+1)) */
									_idx24=((_idx3+x_max)+3);
									/* _idx17 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx17=((_idx12+x_max)+4);
									/* _idx25 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx25=(_idx22+1);
									u_0_1[_idx8]=((alpha*u_0_0[_idx8])+(beta*((u_0_0[_idx23]+(u_0_0[_idx3]+u_0_0[_idx24]))+(u_0_0[_idx1]+(u_0_0[_idx17]+u_0_0[_idx25])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx20 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x-1)) */
									_idx20=((_idx7+x_max)-1);
									/* _idx21 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+2)))+p3_idx_x) */
									_idx21=((_idx3+x_max)+2);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									/* _idx22 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx22=((_idx11+x_max)+1);
									u_0_1[_idx3]=((alpha*u_0_0[_idx3])+(beta*((u_0_0[_idx8]+(u_0_0[_idx20]+u_0_0[_idx21]))+(u_0_0[_idx0]+(u_0_0[_idx13]+u_0_0[_idx22])))));
								}
							}
							for (; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

__device__ void laplacian___unroll_p3_20102(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx10;
	int _idx11;
	int _idx12;
	int _idx13;
	int _idx14;
	int _idx15;
	int _idx16;
	int _idx17;
	int _idx18;
	int _idx19;
	int _idx2;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int _idx7;
	int _idx8;
	int _idx9;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<(v2_idx_z_max-1); p3_idx_z+=2)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
									/* _idx16 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+2)) */
									_idx16=(_idx12+3);
									/* _idx17 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx17=((_idx12+x_max)+4);
									/* _idx18 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx18=(_idx12-x_max);
									/* _idx19 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+(p3_idx_x+1)) */
									_idx19=(_idx15+1);
									u_0_1[_idx10]=((alpha*u_0_0[_idx10])+(beta*((u_0_0[_idx16]+(u_0_0[_idx5]+u_0_0[_idx17]))+(u_0_0[_idx18]+(u_0_0[_idx19]+u_0_0[_idx1])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx12 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x-1)) */
									_idx12=(_idx5-1);
									/* _idx13 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y+1)))+p3_idx_x) */
									_idx13=((_idx12+x_max)+3);
									/* _idx14 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+(p3_idx_y-1)))+p3_idx_x) */
									_idx14=((_idx12-x_max)-1);
									/* _idx15 = (((x_max+2)*(((y_max+2)*(p3_idx_z+2))+p3_idx_y))+p3_idx_x) */
									_idx15=(((_idx14+((x_max+2)*y_max))+(3*x_max))+6);
									u_0_1[_idx5]=((alpha*u_0_0[_idx5])+(beta*((u_0_0[_idx10]+(u_0_0[_idx12]+u_0_0[_idx13]))+(u_0_0[_idx14]+(u_0_0[_idx15]+u_0_0[_idx0])))));
								}
							}
						}
						for (; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<(v2_idx_x_max-1); p3_idx_x+=2)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
									/* _idx7 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+2)) */
									_idx7=(_idx2+3);
									/* _idx8 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+(p3_idx_x+1)) */
									_idx8=((_idx2+x_max)+4);
									/* _idx9 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+(p3_idx_x+1)) */
									_idx9=(_idx2-x_max);
									/* _idx10 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx10=(_idx5+1);
									/* _idx11 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+(p3_idx_x+1)) */
									_idx11=(_idx6+1);
									u_0_1[_idx1]=((alpha*u_0_0[_idx1])+(beta*((u_0_0[_idx7]+(u_0_0[_idx0]+u_0_0[_idx8]))+(u_0_0[_idx9]+(u_0_0[_idx10]+u_0_0[_idx11])))));
								}
								for (; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x);
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx1=(_idx0+1);
									/* _idx2 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx2=(_idx0-1);
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx3=((_idx2+x_max)+3);
									/* _idx4 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx4=((_idx2-x_max)-1);
									/* _idx5 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx5=(((_idx3+((x_max+2)*y_max))+x_max)+2);
									/* _idx6 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx6=(((_idx3+((( - x_max)-2)*y_max))-(3*x_max))-6);
									u_0_1[_idx0]=((alpha*u_0_0[_idx0])+(beta*((u_0_0[_idx1]+(u_0_0[_idx2]+u_0_0[_idx3]))+(u_0_0[_idx4]+(u_0_0[_idx5]+u_0_0[_idx6])))));
								}
							}
						}
					}
				}
			}
		}
	}
	( * u_0_1_out)=u_0_1;
}

/*
(u[0][0][0][1][0]=((alpha*u[0][0][0][0][0])+(beta*((u[1][0][0][0][0]+(u[-1][0][0][0][0]+u[0][1][0][0][0]))+(u[0][-1][0][0][0]+(u[0][0][1][0][0]+u[0][0][-1][0][0]))))))

*/
__global__ void laplacian(float *  *  u_0_1_out, float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk, int _unroll_p3)
{
	switch (_unroll_p3)
	{
		case 0:
		laplacian___unroll_p3_20201(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
		case 1:
		laplacian___unroll_p3_10202(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
		case 2:
		laplacian___unroll_p3_10102(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
		case 3:
		laplacian___unroll_p3_10201(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
		case 4:
		laplacian___unroll_p3_20101(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
		case 5:
		laplacian___unroll_p3_10101(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
		case 6:
		laplacian___unroll_p3_20202(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
		case 7:
		laplacian___unroll_p3_20102(u_0_1_out, u_0_0, u_0_1, alpha, beta, x_max, y_max, z_max, cb_x, cb_y, cb_z, chunk);
		break;
	}
}

__global__ void initialize_laplacian(float *  u_0_0, float *  u_0_1, float alpha, float beta, int x_max, int y_max, int z_max, int cb_x, int cb_y, int cb_z, int chunk)
{
	int _idx0;
	int _idx1;
	int _idx2;
	int _idx3;
	int _idx4;
	int _idx5;
	int _idx6;
	int end0;
	int end1;
	int end2;
	int numthds0;
	int numthds1;
	int p3_idx_x;
	int p3_idx_y;
	int p3_idx_z;
	int start0;
	int start1;
	int v2_blkidx_x;
	int v2_blkidx_x_idxouter;
	int v2_blkidx_y;
	int v2_blkidx_z;
	int v2_idx_x;
	int v2_idx_x_max;
	int v2_idx_y;
	int v2_idx_y_max;
	int v2_idx_z;
	int v2_idx_z_max;
	/*
	Initializations
	*/
	/*
	Implementation
	*/
	start0=(threadIdx.x+(blockDim.x*blockIdx.x));
	end0=(((int)(((x_max+cb_x)-1)/cb_x))-1);
	numthds0=(blockDim.x*gridDim.x);
	start1=(threadIdx.y+(blockDim.y*blockIdx.y));
	end1=(((int)(((y_max+cb_y)-1)/cb_y))-1);
	numthds1=(blockDim.y*gridDim.y);
	end2=(((int)(((z_max+cb_z)-1)/cb_z))-1);
	/*
	for v2_blkidx_z = threadIdx.z..end2 by blockDim.z parallel 1 <level 1> schedule 1 { ... }
	*/
	for (v2_blkidx_z=threadIdx.z; v2_blkidx_z<=end2; v2_blkidx_z+=blockDim.z)
	{
		v2_idx_z=v2_blkidx_z;
		v2_idx_z=((v2_idx_z*cb_z)+1);
		v2_idx_z_max=min((v2_idx_z+cb_z), (z_max+1));
		/*
		for v2_blkidx_y = start1..end1 by numthds1 parallel 1 <level 1> schedule 1 { ... }
		*/
		for (v2_blkidx_y=start1; v2_blkidx_y<=end1; v2_blkidx_y+=numthds1)
		{
			v2_idx_y=v2_blkidx_y;
			v2_idx_y=((v2_idx_y*cb_y)+1);
			v2_idx_y_max=min((v2_idx_y+cb_y), (y_max+1));
			/*
			for v2_blkidx_x_idxouter = (start0*chunk)..end0 by (numthds0*chunk) parallel 1 <level 1> schedule 1 { ... }
			*/
			for (v2_blkidx_x_idxouter=(start0*chunk); v2_blkidx_x_idxouter<=end0; v2_blkidx_x_idxouter+=(numthds0*chunk))
			{
				/*
				for v2_blkidx_x = v2_blkidx_x_idxouter..min(end0, (v2_blkidx_x_idxouter+(chunk-1))) by 1 parallel 1 <level 1> schedule 1 { ... }
				*/
				for (v2_blkidx_x=v2_blkidx_x_idxouter; v2_blkidx_x<=min(end0, (v2_blkidx_x_idxouter+(chunk-1))); v2_blkidx_x+=1)
				{
					v2_idx_x=v2_blkidx_x;
					v2_idx_x=((v2_idx_x*cb_x)+1);
					v2_idx_x_max=min((v2_idx_x+cb_x), (x_max+1));
					/* Index bounds calculations for iterators in v2[t=t][0] */
					/*
					for POINT p3[t=t][0] of size [1, 1, 1] in v2[t=t][0] + [ min=[0, 0, 0], max=[0, 0, 0] ] parallel 1 <level 1> schedule default { ... }
					*/
					{
						/* Index bounds calculations for iterators in p3[t=t][0] */
						for (p3_idx_z=v2_idx_z; p3_idx_z<v2_idx_z_max; p3_idx_z+=1)
						{
							for (p3_idx_y=v2_idx_y; p3_idx_y<v2_idx_y_max; p3_idx_y+=1)
							{
								for (p3_idx_x=v2_idx_x; p3_idx_x<v2_idx_x_max; p3_idx_x+=1)
								{
									/* Index bounds calculations for iterators in p3[t=t][0] */
									/*
									p3[t=(t+1)][0]=stencil(p3[t=t][0])
									*/
									/* _idx0 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1)) */
									_idx0=(((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x-1));
									u_0_0[_idx0]=(((1.0f+((p3_idx_x+-1)*0.1f))+(p3_idx_y*0.01f))+(p3_idx_z*0.0010f));
									/* _idx1 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y-1)))+p3_idx_x) */
									_idx1=((_idx0-x_max)-1);
									u_0_0[_idx1]=(((1.0f+(p3_idx_x*0.1f))+((p3_idx_y+-1)*0.01f))+(p3_idx_z*0.0010f));
									/* _idx2 = (((x_max+2)*(((y_max+2)*(p3_idx_z-1))+p3_idx_y))+p3_idx_x) */
									_idx2=(((_idx1+((( - x_max)-2)*y_max))-x_max)-2);
									u_0_0[_idx2]=(((1.0f+(p3_idx_x*0.1f))+(p3_idx_y*0.01f))+((p3_idx_z+-1)*0.0010f));
									/* _idx3 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+p3_idx_x) */
									_idx3=(_idx0+1);
									u_0_0[_idx3]=(((1.0f+(p3_idx_x*0.1f))+(p3_idx_y*0.01f))+(p3_idx_z*0.0010f));
									/* _idx4 = (((x_max+2)*(((y_max+2)*(p3_idx_z+1))+p3_idx_y))+p3_idx_x) */
									_idx4=(((_idx3+((x_max+2)*y_max))+(2*x_max))+4);
									u_0_0[_idx4]=(((1.0f+(p3_idx_x*0.1f))+(p3_idx_y*0.01f))+((p3_idx_z+1)*0.0010f));
									/* _idx5 = (((x_max+2)*(((y_max+2)*p3_idx_z)+(p3_idx_y+1)))+p3_idx_x) */
									_idx5=((_idx0+x_max)+3);
									u_0_0[_idx5]=(((1.0f+(p3_idx_x*0.1f))+((p3_idx_y+1)*0.01f))+(p3_idx_z*0.0010f));
									/* _idx6 = (((x_max+2)*(((y_max+2)*p3_idx_z)+p3_idx_y))+(p3_idx_x+1)) */
									_idx6=(_idx0+2);
									u_0_0[_idx6]=(((1.0f+((p3_idx_x+1)*0.1f))+(p3_idx_y*0.01f))+(p3_idx_z*0.0010f));
									u_0_1[_idx3]=(((11.0f+(p3_idx_x*0.1f))+(p3_idx_y*0.01f))+(p3_idx_z*0.0010f));
								}
							}
						}
					}
				}
			}
		}
	}
}

