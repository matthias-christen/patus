#!/bin/bash

# check whether the environment includes Patus
if [ -z $PATUS_HOME ]
then
	echo "PATUS_HOME not set."
	echo "Please source util/patusvars.sh (in bash/sh) or util/patusvars.csh (in csh/tcsh)"
	echo "before using patus."
	exit
fi

# check whether Java is available
java_ver=`java -version 2>&1 | grep "java version" | sed "s/java version \"//"`
if [ -z "$java_ver" ]
then
	echo "Java was not found on your system."
	echo "Please install Java 7 or later (http://www.oracle.com/technetwork/java/javase/downloads/index.html)"
	echo "and make sure that it can be started with the 'java' command."
	exit
else
	java_maj=`echo $java_ver | cut -d '.' -f 1`
	java_min=`echo $java_ver | cut -d '.' -f 2`

	if [ $java_maj -lt 1 ] || ( [ $java_maj -eq 1 ] && [ $java_min -lt 7 ] )
	then
		echo "Java $java_maj.$java_min was found on your system."
		echo "Patus requires Java 7 or later. Please download the latest version from"
		echo "http://www.oracle.com/technetwork/java/javase/downloads/index.html"
		echo "and install it on your system."
		exit
	fi
fi


# check arguments and set defaults if the arguments were not provided

# - does the user want help?
#   (--help flag set or no arguments provided)
if [ $# -eq 0 ] || echo $@ | grep -q "\\-\\-help"
then
	echo "Syntax:"
	echo "    patus <stencil-spec> [ command-line-options ]"
	echo "Below are the command line options you can provide to patus.jar."
	echo
	java -jar $PATUS_HOME/bin/patus.jar codegen
	echo
	echo "The following architectures names can be used:"
	grep "architectureType name=" $PATUS_HOME/arch/architectures.xml | sed s/.\\+name=\"//g | sed s/\".\\+//g
	exit
fi

# get the stencil specification
stencil_spec=$1
shift

# set default strategy and default architecture
arch="x86_64 SSE asm"
if grep -q avx /proc/cpuinfo
then
	# the CPU supports AVX
	arch="x86_64 AVX asm"
	echo "AVX support detected; using the architecture name '$arch'"
fi

strategy="$PATUS_HOME/strategy/cacheblocked.stg"
outdir="$PWD/out"
unroll="1,2,4:1:1"
moreargs=""

while getopts ":-:" optchar
do
	arg_name=${OPTARG%=*}
	arg_value=${OPTARG#*=}
	
	case "$arg_name" in
	architecture)
		arch="$arg_value"
		;;
	strategy)
		strategy="$arg_value"
		;;
	outdir)
		outdir="$arg_value"
		;;
	unroll)
		unroll="$arg_value"
		;;
	*)
		moreargs="$moreargs --$arg_name=$arg_value"
		;;
	esac
done


# run Patus
java -jar $PATUS_HOME/bin/patus.jar codegen --stencil2=$stencil_spec --strategy=$strategy --outdir=$outdir --unroll=$unroll --architecture="$PATUS_HOME/arch/architectures.xml,$arch" $moreargs
